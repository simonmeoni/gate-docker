##########################################################
# Default environment variables                          #
##########################################################

#The host name - for local installation, it should be localhost
host.name=localhost

#The HTTP server host name and port
# DEPRECATED: new installations should set url.base instead, but the default
# url.base is constructed from the http.server property to remain compatible
# with existing local property overrides
http.server=${host.name}:8080

# The public base URL (protocol, host name and port) of this teamware
# installation.  This is used to construct URLs at which the Java Web Start
# GUIs can access the doc service and the callback service.
url.base=http://${http.server}

# The "private" base URL of this teamware installation.  By default this is the
# same as the public one, but a particular installation may choose to set it
# differently.  For example if remote clients access this teamware installation
# through an Apache HTTPS proxy it may be desirable for services hosted locally
# to communicate with each other directly over HTTP, bypassing the proxy.
#
# This private URL base is used (a) for the executive to communicate with the
# doc service, (b) for the doc service to verify security tokens with the
# executive and (c) for the executive to make calls to "local" annotation
# services (whether a service is local or not is configurable through the
# executive admin interface) and for such services to make calls back to the
# doc service and the executive itself.  Non-local annotation services use the
# standard public URL base.
private.url.base=${url.base}

#The path to tomcat directory. By default tomcat inside SAFE root is used
tomcat.dir=${safe.dir}/tomcat6

#The path to tomcat directory. By default tomcat inside SAFE root is used
tomcat.lib.dir=${tomcat.dir}/lib

#The path to gate directory. By default gate checked out in the same level as safe project is used
gate.dir=${safe.dir}/../gate

#The path to tomcat instance created by Cargo
tomcat.test.dir=${safe.dir}/executive/build/test/${cargoId}

# the tomcat conf directory
tomcat.conf.dir=${tomcat.dir}/conf

# the directory where context xml files are created
tomcat.context.dir=${tomcat.conf.dir}/Catalina/${host.name}

# the directory where context xml files used for test-jsp are created
tomcat.test.context.dir=${tomcat.test.dir}/conf/Catalina/${host.name}

# the name of the deploy directory
deploy.dir.name=${instance.name}-webapps

# the directory where all war files are deployed
deploy.dir=${tomcat.dir}/${deploy.dir.name}

# the test directory where all war files are deployed
test.deploy.dir=${tomcat.test.dir}/${deploy.dir.name}

# webapp name
webapp.name=executive

# webapp title
webapp.title=GATE Teamware 1.4

# The build-time location of the instance dir which hosts
# HSQL DB, DATASTORE, INDEX, ML MODEL, OWLIM and AS
# Targets that copy things to the instance dir should use this property as the
# destination.
instance.dir.build=${user.home}/safe/${instance.name}

# The runtime location of instance dir. Usually this will be the same as the
# build-time location but need not be if we will be deploying SAFE to a
# different machine from the one on which it was built.
# This value is written to property files, etc.
instance.dir=${instance.dir.build}

# The build-time location of directory where schemas are stored (MAIN
# repository)
schema.dir.build=${instance.dir.build}/schemas

# The runtime location of the schema dir.
schema.dir=${instance.dir}/schemas

# Default location of the executive Security Token Verifier.  This default value
# uses the ${private.url.base} rather than ${url.base} because even when
# public access to teamware is through a proxy, access from the docservice to
# the executive to verify security tokens should be direct.
executive.verifier.url=${private.url.base}/${instance.name}/${webapp.name}/security/token/

################################################################################
# database properties - written to database.properties at build time           #
# The default setting is for HSQL DB                                          #
################################################################################

#database.type for MySQL is "mysql" and for HSQLDB is "hsqldb"
database.type=mysql

# for HSQLDB, specify the directory used to hold the database files
# hsqldb.data.dir=${instance.dir}/${instance.name}/hsqldb

#choose different host name for different DB,for MySQL DB:
database.host=${SQLHOST}
#for Hybersonic DB is "file" as we use in process mode for HSQLDB.
#database.host=file

#The default username for MySQL is "root" and for HSQLDB is "sa"
database.username=root
database.password=${PASSWORD}

#The database driver class for MySQL is "com.mysql.jdbc.Driver" and
#for HSQLDB is "org.hsqldb.jdbcDriver"
database.driver_class=com.mysql.jdbc.Driver

#the name of DB
database.name=${instance.name}_db

#The database.url for MySQL is:
database.url=jdbc:${database.type}://${database.host}/${database.name}?useUnicode=true&amp;amp;characterEncoding=utf-8
#database.url=jdbc:${database.type}:${database.host}:${hsqldb.data.dir}/${database.name};shutdown=true

#The admin url. For MySQL this should not include a database name, for hsqldb
#it should include the database name "hsqldb"
#database.admin.url=jdbc:${database.type}://${database.host}/${database.type}
database.admin.url=jdbc:${database.type}://${database.host}/

#The Hibernate Dialect for MySQL is:
hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#and for HSQLDB is:
#hibernate.dialect=org.hibernate.dialect.HSQLDialect





# mail server properties,
# usually it would be enough to change only mail.default.from
mail.default.from=GATE Teamware <gate@dcs.shef.ac.uk>
mail.debug=false
mail.transport.protocol=smtp
mail.host=mailhost.dcs.shef.ac.uk
mail.username=
mail.password=

# error messages mail settings
# for log4j.properties file (in web/WEB-INF/log4.properties).
error.mailTo=agaton@localhost
error.server=localhost

# if you do not want to build jws (in order to save time) change this property in local build properties to have some other value.
build.jws=yes


file.protocol.prefix=file://

####  HTTPS-related settings ####
#
# If you will be running your teamware instance over HTTPS rather than (or as
# well as) HTTP then you need to set the following property in your local or
# instance-specific properties file.  The CXF web service client toolkit that
# is used for all communication between the teamware services does not trust
# any server certificates by default, so we need to inject some settings into
# the various web applications and JWS UIs to enable them to trust the
# certificate of the server on which the services are running.
#
# Location of a JKS keystore containing certificates that should be trusted.
# If your HTTPS server certificate is self-signed then the keystore should
# contain a copy of the self-signed certificate.  If the server certificate is
# issued by a CA the keystore should instead contain the CA root certificate
# that issued the server certificate.  If this property is not set, no trust
# settings will be injected into the teamware webapps and JWS GUIs.
#https.truststore=${safe.dir}/server-trust.keystore
#
# If https.truststore is set, the following property should also be set to
# provide the keystore password.  Since this keystore should only contain
# certificates, not private keys, it does not need to be a particularly secure
# password.
#https.truststore.password=changeit
